{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleError","imgUrlError","imdbUrlError","imdbIdError","disabled","handleSubmit","event","preventDefault","props","addMovie","setState","handleChange","target","name","value","onBlur","valueMatch","match","this","onSubmit","htmlFor","type","id","placeholder","onChange","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84f7fe3d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n    disabled: true,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      disabled: true,\n    });\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onBlur = (event) => {\n    const { name, value } = event.target;\n\n    const valueMatch = value\n      // eslint-disable-next-line max-len\n      .match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    const titleError = name === 'title' && value === '';\n    const imgUrlError = name === 'imgUrl' && (value === '' || !valueMatch);\n    const imdbUrlError = name === 'imdbUrl' && (value === '' || !valueMatch);\n    const imdbIdError = name === 'imdbId' && value === '';\n\n    this.setState({\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n      disabled: !(!titleError && !imgUrlError && !imdbUrlError && !imdbIdError),\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n      disabled,\n    } = this.state;\n\n    return (\n      <div>\n        <div>Add new movie</div>\n        <form\n          className=\"form\"\n          onSubmit={this.handleSubmit}\n        >\n          <label\n            className=\"label\"\n            htmlFor=\"title\"\n          >\n            title\n          </label>\n          <input\n            className={titleError\n              ? 'input input--error'\n              : 'input'}\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            placeholder=\"title\"\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n          />\n          {titleError\n            && <div className=\"error\">Please enter valid title!</div>}\n\n          <label\n            className=\"label\"\n            htmlFor=\"description\"\n          >\n            description\n          </label>\n          <input\n            className=\"input\"\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={description}\n            placeholder=\"description\"\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n          />\n\n          <label\n            className=\"label\"\n            htmlFor=\"imgUrl\"\n          >\n            imgUrl\n          </label>\n          <input\n            className={imgUrlError\n              ? 'input input--error'\n              : 'input'}\n            type=\"text\"\n            id=\"imgUrl\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            placeholder=\"imgUrl\"\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n          />\n          {imgUrlError\n            && <div className=\"error\">Please enter valid imgUrl!</div>}\n\n          <label\n            className=\"label\"\n            htmlFor=\"imdbUrl\"\n          >\n            imdbUrl\n          </label>\n          <input\n            className={imdbUrlError\n              ? 'input input--error'\n              : 'input'}\n            type=\"text\"\n            id=\"imdbUrl\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            placeholder=\"imdbUrl\"\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n          />\n          {imdbUrlError\n            && <div className=\"error\">Please enter valid imdbUrl!</div>}\n\n          <label\n            className=\"label\"\n            htmlFor=\"imdbId\"\n          >\n            imdbId\n          </label>\n          <input\n            className={imdbIdError\n              ? 'input input--error'\n              : 'input'}\n            type=\"text\"\n            id=\"imdbId\"\n            name=\"imdbId\"\n            value={imdbId}\n            placeholder=\"imdbId\"\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n          />\n          {imdbIdError\n            && <div className=\"error\">Please enter valid imdbId!</div>}\n\n          <button\n            className=\"button\"\n            type=\"submit\"\n            disabled={disabled}\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}