{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","name","value","error","handleChange","onBlur","htmlFor","type","id","placeholder","onChange","initialFields","regexp","NewMovie","state","fields","errors","disabled","handleSubmit","event","preventDefault","props","addMovie","setState","target","prevState","test","fieldsWithoutDescription","Object","values","some","field","this","onSubmit","keys","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6ff6ce9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({\n  name,\n  value,\n  error,\n  handleChange,\n  onBlur,\n}) => (\n  <>\n    <label\n      key={name}\n      className=\"label\"\n      htmlFor={name}\n    >\n      {name}\n    </label>\n    <input\n      className={error\n        ? 'input input--error'\n        : 'input'}\n      type=\"text\"\n      id={name}\n      name={name}\n      value={value}\n      placeholder={name}\n      onChange={handleChange}\n      onBlur={onBlur}\n    />\n    {error && (\n      <div className=\"error\">Please enter correct value</div>\n    )}\n  </>\n);\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.bool,\n  handleChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n};\n\nInput.defaultProps = {\n  error: null,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\n\nconst initialFields = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\n// eslint-disable-next-line max-len\nconst regexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    fields: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    disabled: true,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.addMovie({ ...this.state.fields });\n\n    this.setState({\n      fields: initialFields,\n      disabled: true,\n    });\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      fields: {\n        ...prevState.fields,\n        [name]: value,\n      },\n    }));\n  };\n\n  onBlur = (event) => {\n    const { name, value } = event.target;\n    const { fields, errors } = this.state;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          [name]: !regexp.test(value),\n        },\n      }));\n    } else if (name !== 'description') {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          [name]: value === '',\n        },\n      }));\n    }\n\n    const fieldsWithoutDescription = { ...fields };\n\n    delete fieldsWithoutDescription.description;\n\n    this.setState({\n      disabled:\n        Object.values(fieldsWithoutDescription).some(field => field === '')\n        || Object.values(errors).some(error => error === true),\n    });\n  };\n\n  render() {\n    const {\n      fields,\n      errors,\n    } = this.state;\n\n    return (\n      <div>\n        <div>Add new movie</div>\n        <form\n          className=\"form\"\n          onSubmit={this.handleSubmit}\n        >\n          {Object.keys(fields).map(field => (\n            <Input\n              key={field}\n              name={field}\n              value={fields[field]}\n              error={errors[field]}\n              handleChange={this.handleChange}\n              onBlur={this.onBlur}\n            />\n          ))}\n\n          <button\n            className=\"button\"\n            type=\"submit\"\n            disabled={this.state.disabled}\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}